// what do we need to do for a task type?
// the task can iterate through the paramMap to populate properties for a task
// panel can create filters
// task-scraper will generate this

// ****** TASK TYPES ******
{
  "taskTypeName": "combat-tasks",
  "filters": {
    "difficulty": {},
    "area": {},
    "boss": {}
  },
  "paramMap": {
    "id": [873],
    "name": [874],
    "description": [875],
    "difficulty": [1852],
    "area": [1852],
    "boss": [1018]
  },
  "pointMap": [10,40,80,200,400] //1,2,3,4,5
}


// ****** TASKS ******
// client will receive the struct list
// client will iterate the struct list to populate task panels
// how do we know which structs to pull in for a task type?
// - json store has this data
// - data will be generated by task-scraper
// skills & metadata are added by the reldo team
// - scrape from wiki
// - manually populate
{
  "structId": 739,
  "sortId": 1, // determined by scraping all tasks, and sorting by id within difficulty, then difficulty
  "skills": [{

  }],
  "metadata": [{

  }]
}
// TODO: Consider how we join player data (completed on, tracked, etc)

// ****** FILTERS ******
// filters with slug SKILL will use baked in SKILL filter which references task.skills
// filters with param populated will use task-type json paramMap to find the paramid
// - the values in filters.json will be valid values for the param
// - TODO: need a way to give plain text values to these
// filters without SKILL and without param will use task json metadata properties
// - these are additional properties